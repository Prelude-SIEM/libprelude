* 2020-07-23, libprelude-5.2.0rc1:

No new changes.



* 2020-06-30, libprelude-5.2.0beta2:

Author: Yoann Vandoorselaere

- Proper escaping of substr/regex criterion



* 2020-06-19, libprelude-5.2.0beta1:

Author: Antoine Luong

- Switch license to LGPL

- Add Python 3.7/3.8 support

- Update to SWIG 4.0.1

- Fix LIBPRELUDECPP_SONAME

Author: Yoann Vandoorselaere

- Implement prelude_msg_clone()

- Properly check for EINTR

- Update libprelude-error for GAWK 5.0

- Fix for system that does not implement PATH_MAX

- Various IDMEF criteria improvements

    - Fix substring unit tests
    - Raw string support
    - Fix regexp comparison with NULL IDMEF value
    - Proper escaping of IDMEF criteria
    - Use PCRE when available for criteria matching
    - Substring match is now handled using fnmatch

- Prefix Flex/Yacc public symbol

Author: Francois Poirotte

- Remove superfluous brackets in AC_INIT



* 2019-09-13, libprelude-5.1.0:
* 2019-09-04, libprelude-5.1.0rc1:

No new changes.



* 2019-08-16, libprelude-5.1.0beta3:

Author: Yoann Vandoorselaere

- Update to SWIG 4

- Fix possible crash on invalid unicode string



* 2019-07-17, libprelude-5.1.0beta1:

Author: Yoann Vandoorselaere

- Fix various JSON parser errors

- Add optional IDMEFPath argument to IDMEFValue() constructor

- Fix incorrect string export of IDMEFTime microseconds



* 2019-03-15, libprelude-5.1.0alpha1:

Author: Yoann Vandoorselaere

- Fix py3 pickle error

- Properly implement Criterion NOT operator, fix operator precedence

- More environment variable to ease debugging



* 2018-09-07, libprelude-5.0.0:

Author: Antoine Luong

- Fix docstring typos

- Update GnuLib code



* 2018-08-17, libprelude-5.0.0rc1:

Author: Yoann Vandoorselaere

- Change the structure of IDMEF criteria

- Make IDMEFPath and IDMEFCriteria pickle compatible

Author: Antoine Luong

- Fix IDMEF_MSG_REFERENCE_NAME value



* 2018-05-04, libprelude-5.0.0beta2:

No new changes.



* 2018-04-13, libprelude-5.0.0beta1:

Author: Antoine Luong

- Update GnuLib code

Author: Thomas Andrejak

- Add python 3.6 support

- Fix spelling in Perl bindings

- Fix server_confirm type



* 2018-02-09, libprelude-4.2.0rc1:

Author: Yoann Vandoorselaere

- Ability to specify attributes for IDMEF path

Author: Antoine Luong

- Fix the encoding error handler for Python 2

Author: Thomas Andrejak

- Use SHA256 signature with GnuTLS instead of default SHA1



* 2017-07-21, libprelude-4.1.0:

No new changes.



* 2017-07-13, libprelude-4.1.0rc2:

Author: Yoann Vandoorselaere

- Update GnuLib code



* 2017-06-30, libprelude-4.1.0rc1:

Author: Yoann Vandoorselaere

- Copy prelude-client analyzer object instead of referencing it



* 2017-06-23, libprelude-4.1.0beta2:

Author: Yoann Vandoorselaere

- Prevent sending TLS alert on fatal error



* 2017-06-16, libprelude-4.1.0beta1:

Author: Thomas Andrejak

- Manpage spelling check

- Correct the format of the year in date error message



* 2017-02-16, libprelude-4.0.0:
* 2017-02-12, libprelude-4.0.0rc3:
* 2017-02-03, libprelude-4.0.0rc2:

No new changes.



* 2017-01-27, libprelude-4.0.0rc1:

Author: Yoann Vandoorselaere

- Fix crash when retrieving listed value



* 2017-01-12, libprelude-4.0.0beta2:

Author: Yoann Vandoorselaere

- Update GnuLib and SWIG generated code

- Get rid of libgcrypt

    Nowadays, libgcrypt functions that we used are now available
    directly from GnuTLS, which uses libnettle.



* 2016-12-23, libprelude-4.0.0beta1:

Author: Yoann Vandoorselaere

- Implement idmef_criteria_get_class()

    This function can be used to retrieve the idmef_class_id_t of the root
    paths elements used for a given criteria.

- Implement prelude.return_unicode(flags)

    When enabled, string returned from SWIG wrapped function will be
    converted to unicode.

- Fix possible IDMEFValue 'out of range' error



* 2016-09-14, libprelude-3.1.0:

Author: Thomas Andrejak

- Fix idmef_path_(get|set) docstring



* 2016-09-01, libprelude-3.1.0rc3:

No new changes.



* 2016-08-19, libprelude-3.1.0rc2:

Author: Thomas Andrejak

- Fix configure --with-ruby



* 2016-08-05, libprelude-3.1.0rc1:

Author: Thomas Andrejak

- Various autotools fixes

    - Fix detection of lua 5.2
    - Fix python uninstall with /usr and /usr/local
    - Fix perl binding cleaning
    - Make the perl binding use LDFLAGS
    - Enable configure to detect ruby with pkg-config
    - Fix cleaning of lex and yacc files
    - Make libprelude-error take CFLAGS into account
    - Rename configure.in to configure.ac

- Missing dependencies in README

- Update FSF address and copyrights

Author: Yoann Vandoorselaere

- Add a JSON export/import module

- Update SWIG and GnuLib code

- Various code fixes

    - idmef_data_to_string() can output binary string stored as "char-string"
    - Handle EAGAIN even if it's not supposed to happen
    - Implement prelude_msg_get_data()
    - API for atomic message write
    - Improved message handling

Author: SÃ©lim Menouar

- Add libprelude-config man page



* 2016-04-22, libprelude-3.0.0:

Author: Antoine Luong

- Fix make distcheck with LUA and Ruby bindings

Author: Yoann Vandoorselaere

- Fix idmef-criteria valgrind unit test (memory leak)



* 2016-04-15, libprelude-3.0.0rc4:

No new changes.



* 2016-04-08, libprelude-1.3.0rc3:

Author: Yoann Vandoorselaere

- Fix assertions / wrong object matching behavior on list

- Broken-down time comparison worked only once

- Fix multiple idmef-path cloning issue



* 2016-04-01, libprelude-1.3.0rc2:

No new changes.



* 2016-03-25, libprelude-1.3.0rc1:

Author: Louis-David Gabet

- Update README



* 2016-03-18, libprelude-1.3.0beta2:

Author: Yoann Vandoorselaere

- Properly set top class when using idmef_path_new_from_root_fast()



* 2016-03-01, libprelude-1.3.0beta1:

Author: Thomas Andrejak

- Change c-s.fr to prelude-siem.com

Author: Abdel Elmili

- Fix typos

Author: Antoine Luong

- Fix depth comparison in IDMEFClass()



* 2016-01-11, libprelude-1.3.0alpha1:

Author: Yoann Vandoorselaere

- Implement utility functions for IDMEF union

    - idmef_class_is_child_union_member()
    - idmef_class_get_child_union_id()

- Implement idmef_object_get_class()

- Improve string allocation algorithm

- Fix crash on listed value retrieval

- Fix IDMEF object copy

- Improve error reporting

- Remove IDMEF SNMP community field



* 2015-07-31, libprelude-1.2.6:

No new changes.



* 2015-07-27, libprelude-1.2.6rc5:

Author: Yoann Vandoorselaere

- Low-level bindings are now deprecated

- AdditionalData fixes

    - [#446] Automatic AdditionalData typing

    - [#447] Handle negative AdditionalData

    - Support IDMEFTime() object within AdditionalData,
      as required per the IDMEF RFC

- SWIG update to 3.0.6

    - SWIG Python now use builtin mode (massive performance improvements)

    - Fix lua/perl code generation

    - [#522, #503] Prevent instance attribute to be reset on __init__()

- Reset all object data when calling idmef_time_set_from_string()
  on an already initialized time

- IDMEFCriteria time comparison fixes

- Make sure we listen on all interfaces (IPv4+IPv6 dual stack fixes)

- Proper implementation of Prelude::IDMEF __(get|set)state__

- Fix GCC5 libprelude-error compilation failure



* 2014-10-27, libprelude-1.2.6rc4:

Author: Yoann Vandoorselaere

- Add self argument to IDMEFValue_to_SWIG for future builtin compatibility

- Correctly throw PreludeError exception in Python

- Minor fixes



* 2014-10-15, libprelude-1.2.6rc3:

Author: Yoann Vandoorselaere

- Fix #410: gnutls priority error on system with SRP support

- Implement simple, locale independant strtod() function

- Fix #390: Correct library ordering for prelude-admin

- Use --lgpl=2 when invoking GnuLib, remove obsolete GnuLib files

- Handle NULL on IDMEFValue() for IDMEF object constructor

- Introduce support for the IDMEFClass class

- Enable SWIG support for keywords arguments

Author: Thomas Andrejak

- Force definition of LUA_VERSION

- Missing files while generating dist



* 2014-09-23, libprelude-1.2.6rc2:

Author: Yoann Vandoorselaere

- Massive high/low level bindings renaming

    - Low-level perl bindings are deleted
    - Low-level python bindings renamed to "preludeold"
    - High-level perl bindings renamed to "Prelude"
    - High-level python bindings renamed to "prelude"
    - High-level ruby bindings renamed to "Prelude"
    - High-level lua bindings renamed to "prelude"

- Python 3 build, and compatibility fixes, Unicode support for Python 2

- Provide more version number information (major, minor, micro, level, serial)

- Use std::string over const char *

- Update GnuLib code

- Add missing SWIG update

- Revert "Verify ABI compatibility in prelude_init()"

- Define __setitem__ for Python bindings, disable internal code when
  used from the outside world.

- Various fixes



* 2014-09-16, libprelude-1.2.6rc1:

Author: Yoann Vandoorselaere

- Various improvements

    - Fix valgrind memory leak warnings

    - Allow creation of IDMEFPath relative to a root

        Example: idmef_path_new_from_root_fast(&path, IDMEF_CLASS_ID_ANALYZER, "name");
        will create an IDMEFPath that references the 'name' attribute of an
        idmef_analyzer_t object.

    - Introduce the idmef_object_t datatype

        IDMEF datatype now contain their own ID, so that it is possible for API
        using them anonymously to know which object they are currently being
        dealing with.

    - Ability to cast from IDMEFCriteria to idmef_criteria_t

    - Implement idmef_class_print() function
      It is now possible to generically convert any IDMEF object to string.

    - IDMEFPath support for key as index

        Example: idmef.Set("alert.additional_data('My Key').data", "data");
        will create a new AdditionalData object whose key is 'My Key',
        and data is 'data' (the object "meaning" field will thus contain the key).

    - Verify ABI compatibility in prelude_init()

    - Support for IDMEF object in Set()

- Corrections

    - Newly added timer did not expire when expected

    - Add missing IDMEF equal operator

    - prelude-linked-object members ordering fixes, so that the members are
      synchronized with listed idmef_object_t.

    - Fix asynchronous stack / high level bindings callback deadlock

- Compilation fixes

    - Various SWIG fixes

    - Use Prelude namespace explicitely, prevent error when included from other project

    - Include high- and low-level bindings generated code in the repository

        A reference version avoids using buggy or too old SWIG versions,
        do not automatically regenerate bindings by default.
        Warning : not compatible with lua 5.0 on Debian 7 and maybe other Linux

    - Enable Python 2.x Unicode coercion (include a SWIG patch from Brian Cole)

    - From now on, SWIG interface files are now installed
      This will be useful in order to generate libpreludedb bindings.

    - Fix make distcheck

    - Fix compilation with recent Flex version, update C code.



* 2014-07-07, libprelude-1.2.5:

- Various improvements

    - Improved error handling

    - In high level language, return an empty list if the path is ambiguous

    - Allow NULL idmef_value_t in list

        When retrieving value from a path, like alert.source(*).node.address(*).address,
        we also want to return undefined values, so that the returned list conforms
        to the number of item/index in the retrieved path.

    - Improved idmef_path_set() implementation

        It is now possible to set undefined elements, or override them.
        Additionally, append and prepend operation is now much faster.

    - Map idmef_value_type_id_t to a C++ enumeration

    - Provide __hash__ function for IDMEFValue class
      This allow Python sets() operation on IDMEFValue instance.

    - Explicitly activate thread support

    - Comparison operator support for IDMEFValue()

        Allow to directly compare two values together,
        without callingÂ the IDMEFValue.Match() method.
        Add support of the Python "in" operator (item in valuelist).

    - New prelude_list_splice() / prelude_list_splice_tail() function

    - Add missing PRELUDE_SCN* definition

    - Improve AdditionalData type checking

    - Prelude-Timer optimisation

- Corrections

    - Various string conversion fixes

    - Fix leak for all methods returning an idmef_value_type_id_t

    - Fix float value corruption when writing to a prelude_message

    - Fix high level bindings ambiguity on IDMEFPath.Set() and IDMEF.Set() methods

    - NTP timestamps were not correctly printed

    - Corrected IDMEF Clone() method

    - Fix idmef-message-helper units tests

- Compilation fixes

    - Various compilation warning fixes

    - Ruby high level bindings compilation fixes
      Fixed #513: make the Ruby binding code compatible with Ruby 1.9

    - Update to latest GnuTLS API
      Fix compilation if GnuTLS-Extra is not available

    - Fix Perl high level bindings compilation

    - Fixed #386: build failure with libtool 2.4

    - Fix configure script generation, and update GnuLib code



* 2012-06-04, libprelude-1.0.1:

- Fixed typo in setup.py.in

- Added packaging for rhel6

- Changed copyright

- Prevent freeing IDMEF message value on idmef_message_get_string()
  idmef_message_get_string() used to free the value within the IDMEF
  message, because prelude_string_get_string_released() was used. As
  a result, further idmef_message_get_string() on the same IDMEF path
  where returning null value.

- C++ compilation fixes
  Include idmef-data.h, required for idmef_data_t declaration.


* 2010-03-16, libprelude-1.0.0:

- C99 specifics formats are now available for public function using
  string formatting.


* 2010-01-29, libprelude-1.0.0rc1:

- Libprelude EasyBindings are now enabled by default

- Default to generating 2048 bits TLS keys

- Fix a potential IDMEF object copy/clone error return that could occur
  if the caller had freed a required children from the copied object.

- Prevent unsafe modification of the Libprelude returned Analyzer object

- When retrieving a list of IDMEF object, return a Python list
  containing one IDMEFValue for each object.

  This behavior is more consistant than retrieving a single IDMEFValue
  carrying the whole list, and might permit the user to play with the
  object directly if we extand the API in the future.

- Fix argv memory leak on bindings initialization

- Fixes some warnings uncovered by GCC -Wextra

- Thanks to Steve Grubb <sgrubb@redhat.com> for reporting Flexelint
  output! This allowed fixing the following issues:

  [prelude-admin]: fix possible leak on getpass() failure.

  [idmef-data]: fix potential invalid read on architecture where
                sizeof(char) > 1.

  [idmef-path]: idmef_path_set_index() would accept an off by one depth,
                protect the caller.

  [prelude-connection]: fix invalid pointer dereference in case of
                        malloc() failure.



* 2009-01-11, libprelude-0.9.25:

- Sent message priority will now be correctly assigned depending on the input
  IDMEF message.

- Fix critical warnings on destroy when assigning NULL value to IDMEF union.

- Fix Ruby include path detection on certain systems

- Fix idmef_data_t (type CHAR_STRING) mapping to high level language string,
  this prevent enclosing the terminating \0 when mapping an idmef_data_t of
  carrying a string to an high level language string (example: Python, Perl).

- Prevent a possible double free when a C++ IDMEFTime object was referenced
  from multiples place.

- Increase maximum protocol message size, the old size (1mb) could be a
  problem for systems sending very large alerts (example: CorrelationAlert
  with a lot of sources/targets). In the future, this limitation might be
  completly removed.



* 2009-07-08, libprelude-0.9.24.1:

- Use SWIG 1.3.39 to generate bindings code, fixes Prewikka compatibility
  problem because of SWIG version mismatch between libprelude/libpreludedb
  modules.



* 2009-07-08, libprelude-0.9.24:

- Initial prelude-log C++/Python/Ruby/Perl/Lua bindings support.
  This implement language bindings for the PreludeLog interface.

- Make the created profile permission fully respect required ownership.
  The analyzerid file within the created profile was incorrectly created
  with current ownership, rather than using specified uid/gid.

- Ruby and Python bindings were not properly checking whether the
  argument was a file descriptor in case the left/right shift IDMEF
  operator were used.

- Fix prelude-client initialization problem with empty argv[0], which
  sometime happen when called from certain high level language.

- Fix error in case of multiple initialization.

- Fix possible Lua module crash on initialization.

- Various bug fixes


* 2009-06-08, libprelude-0.9.23:

- New API functions to retrieve operators applicable to a given idmef_path_t,
  idmef_value_t or idmef_value_type_t.

- Return an error when a character are provided as input for a 8 bit integer value.

- Make it possible to compare an enumeration path with a string
  by using the standard substring operator (<> or <>*).

- Automatically set IDMEFAnalyzer before sending IDMEF messages.

- Various bug fixes.



* 2009-04-22, libprelude-0.9.22:

- Fix C++ headers installation.

- Automatic, detailed ChangeLog generation (from http://live.gnome.org/Git/ChangeLog).

- Prefix C++ enumeration, implement IDMEFValue::Match() method,
  and provide IDMEFCriterion operator to be used by this method.

- Old behavior when returning an IDMEFValue was to map it's internal type
  to a type understood by the target language. Preserve this behavior unless
  the value contain an IDMEF class, in which case we now return the raw IDMEFValue
  (IDMEF class object are not handled by higher level language, but the value
  containing the class can be useful).

- Use pkg-config for GnuTLS and GnuTLS extra detection, and provide our own
  libprelude pkg-config file.

- Various bug fixes.



* 2008-11-14, libprelude-0.9.21.3:

- Update to libtool / libltdl 2.2.x

- Workaround libtool/libltdl 1.5 -> 2.x ABI compatibility issues. This
  introduce two fixes:

  Fix a crash when an application use a different libtool version than
  the libtool/libltdl version used to compile libprelude. In order to
  prevent this problem, we automatically rewrite the symbol table
  provided by libtool 1.5 applications, and make it compatible with
  libltdl 2.2 (we will now ship libtool/ltdl 2.2 as the default with
  libprelude).

  Automatic handling of symbol renaming between libtool 1.5 -> 2.x,
  which solve application linking problem.

  (fix #294).

- Cygwin compilation fixes.

- Fix compilation when IPv6 is not available.

- Fix possible compilation problem with some GCC version (fix #325).



* 2008-10-13, libprelude-0.9.21.2:

- Fix regression introduced in 0.9.21.1, that would lead to a
  'prelude-admin list' crash (#320).



* 2008-10-06, libprelude-0.9.21.1:

- Fix an assertion warning upon sensor start in case the address
  for the local machine could not be found.

- Consistency rework of EasyBindings IDMEFCriteria API.

- Add refcount support for prelude_client_t and prelude_client_profile_t,
  and update EasyBindings destructor to use them.

- Fix a bug where EasyBindings would be built although they were not enabled.

- Fix path issue in case libprelude was configured with specific path
  outside of $prefix (fix #319).



* 2008-09-19, libprelude-0.9.21:

- libprelude now compile and run under Win32 native!

- Fix file descriptor closure problem after daemonizing (#311).

- New API functions allowing to specify the libprelude working prefix,
  the prefix can be set using the LIBPRELUDE_PREFIX environment variable
  as well (#255).

- libprelude is now relocatable (use --enable-relocatable configure option).

- libgcrypt initialization fixes.

- Complete WIN32 glthread backend.

- Various bug fixes.



* 2008-09-09, libprelude-0.9.20.2:

- Fix possible invalid read when looking up IDMEF path.

- Fix error handling before library initialization.



* 2008-09-05, libprelude-0.9.20.1:

- Fix endless loop in prelude-async, due to the glthread API changes.

- Fix libtool usage for unit-testing.



* 2008-09-03, libprelude-0.9.20:

- Multithreading API independance: support for posix, solaris, pth,
  and win32 backend.

- Automatic Node name and address detection, if the user did not
  provides custom parameters.

- When copying the value prior doing the cast, set the copy to not own
  the value data.

- When casting an IDMEF-Value fail, return the un-modified IDMEF-Value.

- Fixed non working uint32 and uint64 to time cast.

- Honor 'own_data' boolean when casting from/to a string (possible
  double free).

- Include unit tests.

- Correct C++ headers installation path.

- Fix Perl EasyBindings IDMEF->Read() method infinite loop.

- Handle new IDMEF value as new IDMEF object: return the old value if
  one already exist.



* 2008-08-04, libprelude-0.9.19:

- EasyBindings inclusion! EasyBindings provide simple C++, Python,
  Perl, Ruby, and Lua bindings for using libprelude. They are still
  considered experimental, thus you need to use (--enable-easy-bindings)
  to activate them. Thanks to Sebastien Tricaud <toady@inl.fr> and
  Pierre Chifflier <p.chifflier@inl.fr> for their contribution to this
  project!

- Use automake/autoconf for building/installing Python extension.

- Fix 0.9.18 regression (alert created with empty CreateTime).

- Implement reference counting for the idmef-criteria and
  prelude-connection API.

- Automatic casting when setting IDMEF Value to a field that is of
  different type. Until now, if an user tried to set a path of a
  specific type with an idmef_value_t object containing another type,
  idmef_path_set() would return an error.

- Various bug fixes.



* 2008-07-21, libprelude-0.9.18.1:

- Temporarily disable mutex locking while calling event handler, since
  we really need recursive mutex support for this task.

- Fix possible application compilation breakage when including prelude-timer.h:
  include time.h for time_t definition, fix #301.

- Fix compilation error with GnuTLS < 2.2.0 (fix #302).



* 2008-07-18, libprelude-0.9.18:

- Add support for newer GnuTLS 2.2.0 session priority functions. When
  the option is available, the user might specify TLS settings through
  the "tls-options" configuration entry.

- Workaround a GnuTLS issue where the client wouldn't be able
  to negotiate a supported compression protocol with the server (#299).

- Implement variable substitution in Prelude configuration files.

- Allow IDMEF criteria with multiples values for a single path,
  as can be seen in the following example:

  alert.classification.text = (A || B || C || D)

  This will be internally translated to the original criteria language:
  alert.classification.text = A || alert.classification.text = B || alert.classification.text = C || alert.classification.text = D

- Implement negation of idmef-criteria, allowing to write criteria like:
  ! (alert.classification.text = A || alert.classification.text = B)

- Fix an IDMEF-Criteria matching problem, where the match function would
  not attempt to match a OR after multiple consecutive AND that failed.
  Thanks Alexander Afonyashin <firm(at)iname.com> for pointing out the problem.

- Never use non-pointer field, always use the "required" keyword. Fix
  API consistency issue, that could lead to unexpected behavior.

- Fix multiples problem with prelude_read_multiline / prelude_read_multiline2,
  (fix a problem with prelude-manager idmef-criteria that wouldn't read
   external ruleset).

- Error out if GnuTLS initialization fail.


* 2008-05-06, libprelude-0.9.17.2:

- Fix unresolved symbols on some architecture, thanks
  Robin Gruyters <r.gruyters@yirdis.nl> for pointing out this issue.


* 2008-04-28, libprelude-0.9.17.1:

- Remove debug spew, thanks Pierre Chifflier <p.chifflier@inl.fr>
  for pointing that out.


* 2008-04-24, libprelude-0.9.17:

- Implement RFC 4122 UUIDv1 identifier generation, more resistant to
  duplicate than our previous implementation in case of clock skew, or
  multiple client with the same analyzerid sending alert in parallel.

- You can now provide NULL value to idmef_path_set() in order to
  destroy existing value within an IDMEF message.

- Unify memory handling of value retrieval through idmef_path_t. This
  allow the user to retrieve and keep any values, even through the
  associated IDMEF message is freed.

- Build system cleanup, enable RELRO when possible.

- Implement PRELUDE_CLIENT_FLAGS_AUTOCONFIG, which is set by default,
  but that applications might unset in order for their client not to
  read the default profile/global configuration.

- Fix possible assertion when destroying un-started prelude-client.

- Improvement to the prelude-io API, the user might now hook its own
  handling function.

- Fix dumping of (not) NULL criteria operator to string. Remove
  gratuitous space insertion when dumping criteria.

- Headers fixes for C++ build.

- Fix printing and cloning of empty IDMEF string.

- In IDMEF to string convertion code, print <invalid enum value> in
  place of NULL on invalid enumeration value.

- Bindings fixes for optional integer retrieval, by Pierre Chifflier
  <p.chifflier@inl.fr>

- Various bug fixes.



* 2008-01-23, libprelude-0.9.16.2:

- Fix bindings for IDMEF 'get_next' functions.

- Make sure we use no additional GnuLib compiler flags when building
  bindings, this fix bindings compilation failure on some architecture
  (Solaris).

- FreeBSD compilation fixes.

- Solaris compilation fixes.


* 2007-11-22, libprelude-0.9.16.1:

- Heartbeat are now sent as high priority messages.

- Fix compilation issue on system with old GnuTLS version (close #268).

- Propagate the CC environment variable for bindings compilation
  (fix #264), by Pierre Chifflier <p.chifflier@inl.fr>.

- More explicit assertion on invalid API usage, thanks to
  Sebastien Tricaud <toady@inl.fr>.

- Appropriatly set the process umask before creating analyzer
  profile / failover files and directories (Fix possible loading
  problem with certain umask).

- Various bug fixes and minor enhancements.



* 2007-10-01, libprelude-0.9.16:

- Implement prelude-admin list [-l] command, which provide the ability to list
  existing profile name, permission, registration permission, analyzerID, and
  Issuer analyzerid.

- Implement multiple analyzer deletion in prelude-admin.

- Correct printing of IDMEF time field using non local GMT offset.

- Patch to avoid struct typespec redefinition, due to variable mispelling.
  This fixes a compilation problem on OpenBSD 3.8.

- Various bug fixes.


* 2007-09-04, libprelude-0.9.15.2:

- Write the children PID into specified pidfile (fixes #257).

- Fix double free on idmef_criterion_value_t cloned regexp object (thanks
  to Helmut Azbest <helmut.azbest at gmail.com>).

- Allow Python thread to run, while entering libprelude C function.

- Return PRELUDE_ERROR_ASSERTION when API check fail, in place of PRELUDE_ERROR_GENERIC.

- Make prelude_plugin_unsubcribe() work as expected (call the plugin
  instance destroy function).

- Various bug fixes, minor enhancements.


* 2007-08-29, libprelude-0.9.15.1:

- Fix build error on system that use native awk implementation in place of GNU awk
  (Pierre Chifflier <chifflier at inl.fr>), fix #256.

- Avoid a prelude-string fatal assertion, by denying copy/cloning of an empty
  prelude-string.

- Correction to the 'prelude-admin send' help message.

- Convert prelude-string to use prelude_return_if_fail() in place of prelude_log().


* 2007-08-23, libprelude-0.9.15:

- prelude-adduser has been renamed to prelude-admin, and now include command
  to print or send files containing binary IDMEF data.

- Brand new failover implementation,  Feature a real 'journaling' log, allowing
  to restart where we were interupted. Allow multiple process to write to the
  same failover, and is chroot safe.

- prelude-admin manpage, thanks to Frederic Motte <fred at ubixis com>.

- Use SHA1 in place of MD5 for Analyzer checksum.

- Do not set TCP option on UNIX socket, avoid un-necessary warning.

- New measure all over the public interface to protect against bad API usage,
  when a function is not used correctly, a critical warning is triggered.

- [logging]: New PRELUDE_LOG_CRIT logging priority.

- [logging]: Correctly map Prelude log level to Syslog priority.

- [logging]: Improved logging format (include timestamp, level, process pid).

- [logging]: New LIBPRELUDE_ABORT variable, useful if you'd like libprelude to
  abord on critical assertion.

- [logging]: Automatically switch to syslog mode if we detect stdout/stderr
  closure.

- [IDMEF-Criteria]: When we try to match a value against a path that is not
  part of a message using a 'not' operator, the match should succeed (Example:
  alert.classification.text != 'stuff' should match if the message has no
  classification object).

- [IDMEF-Criteria]: When matching multiple listed values within the same path
  using a 'not' operator, return an explicit 'no match' if the provided
  comparison value was found at least once.

- [IDMEF-Path] (fix #251): Fixes NULL pointer dereference when the last element
  of an IDMEF path to an enumeration is not the enumeration itself (SÃ©bastien
  Tricaud <toady at gscore.org>

- Fix a possible race condition with the internal libprelude reference to the
  program idmef_analyzer_t when asynchronous timer were used.

- Workaround possible deadlock at exit on OpenBSD, Linux Glibc.

- Only configure libltdl if it is required.

- Various bug fixes, minor enhancements.


* 2007-05-15, libprelude-0.9.14:

        - Implement TCP keepalive settings on platform that support it,
          check client.conf for details.

        - When reading prelude-adduser password from a file, remove
          newline at the end of the string (fix #221).

        - When we fail to read an IDMEF message, provide more information
          about the place where the error happened.

        - Fix an issue with idmef_path_get() on empty path (pointing to the
          root message).

        - Various bug fixes and minor API improvements.


* 2007-03-30, libprelude-0.9.13.2:

        - Improve error reporting with the central option interface.

        - Fix a bug when comparing IDMEF object with optional fields.

        - Fix a problem with the logger, where large log entry wouldn't be logged.

        - Fix distclean target.


* 2007-03-15, libprelude-0.9.13.1:

        - Implement substring and regexp matching for IDMEF AdditionalData type.

        - When the compiler support it, add format string check capability
          to variable number of arguments function declaration.

        - Fix prelude-adduser regression introduced in libprelude-0.9.13.

        - Fix a regression introduced in [8381] preventing broken down time and regex match to work.

        - Fix a bug when manually setting an IDMEF path index.

        - Prevent invalid pointer dereference when passed invalid enumeration class.

        - Initialize GMT offset when setting a time from an NTP string.

        - Various bug fixes.


* 2007-02-20, libprelude-0.9.13:

        - Fix a crash with Python bindings upon signal reception (Fix #200).

        - New --with-system-ltdl configure switch. The default is now to use the
          system wide ltdl library if it is available, unless specified otherwise
          (Fix #199).

        - Prevent NULL pointer dereference if no permission is specified after the
          permission type (Fix #197).

        - Upon IDMEFCriteria parsing error, recover from broken parser stater (Fix #195).

        - Detailed error reporting on IDMEFCriteria parsing error.

        - Fix string and possible criteria leak on IDMEFCriteria syntax error.

        - Prefer anonymous authentication rather than SRP. We do this because there
          are compatibility issue with SRP between different GnuTLS version
          (Should fix #187).

        - When dumping AdditionalData of type byte-string to string, encode the data using base64.

        - Win32 compatibility fixes.

        - Cross compilation fixes.


* 2007-01-08, libprelude-0.9.12.2:

        - Fix make installation error when Perl bindings are disabled.


* 2007-01-05, libprelude-0.9.12.1:

        - Ability to debug TLS communication through a new LIBPRELUDE_TLS_DEBUG
          environment variable.

        - Prevent binding generation error when using old SWIG version.

        - Generate bindings for the error handling API.

        - Small Perl/Python detection improvement. Fix #182.

        - Fix bindings compilation when using make -j.

        - New configure --with-perl-installdirs flags: might be used to override
          default site perl installation.


* 2006-12-20, libprelude-0.9.12:

        - Correctly pack and unpack float value when sending/receiving.

        - More error checking on IDMEF object copy.

        - Fix a crash that occured when destroying a copied object.

        - Correct registration warning when using AF_UNIX socket.

        - Compile on systems lacking poll().

        - IpV6 compatibility fixes.

        - Fix OS X compilation issues.

        - Various portability fixes.



* 2006-10-10, libprelude-0.9.11:

        - Hook class comparison function. Accept NULL, equal, not equal operator.

        - Introduce better error checking in the idmef-class API, which is now
          considered public and might be used by external application. Rename
          error code to reflect the API.

        - Change to the way IDMEF listed element are handled. Specifying negative
          number as the position of the element from the low level API now allow
          to position the element at the specified (reversed) index. Using the
          high level API a negative index permit to address a list of element
          backward (replace an element).

        - Build fixes for SWIG > 1.3.27.

        - Modify idmef_value_match() so that it always unroll listed value
          (do it for both val1 and val2. Remove assertion, and let
          idmef_value_type_compare() return an error code in case there is an issue.

        - Handle path using IDMEF_LIST_APPEND or IDMEF_LIST_PREPEND as
          path using an undefined list index on idmef_path_get() call.

        - Make criteria parser accept (*) list index.

        - Implement comparison function for all IDMEF object.


* 2006-07-28, libprelude-0.9.10.2:

        - Fix undefined assert() reference.

        - Fix FreeBSD warnings.

        - Fix possible bindings compilation warnings/problem.


* 2006-07-25, libprelude-0.9.10.1:

        - Fix checking for swig/perl/python when full path to the
          application is specified.

        - Fix OpenBSD getaddrinfo() AI_ADDRCONFIG issue (apply to
          some other system as well).

        - Fix workaround for system with broken libtool,
          that prevented the use of plugin (#168).


* 2006-07-12, libprelude-0.9.10:

        - Fix memory leak with some specific criteria.

        - Fix IDMEF path integrity problem when using listed (*) path.

        - Multiple error reporting improvement.

        - API improvement: implement copy and clone function for all IDMEF object.

        - API improvement: allow overwriting/prepending/appending list of value
          through IDMEF path.

        - API improvement: allow refcounting IDMEF Alert and Heartbeat object.

        - API improvement: Make idmef-value memory handling more intuitive by
          automating IDMEF object refcounting.


* 2006-06-06, libprelude-0.9.9:

        - Correct IDMEF v16 checksum algorithms letter case.

        - Fix FreeBSD build.

        - Detailed, verbose error reporting when failing to read IDMEF message.

        - Detailed, verbose error reporting for unsupported value operation.


* 2006-05-03, libprelude-0.9.8:

        - Improve idmef-path error reporting.

        - Rework configure script so that it use --with[out] in
          place of --(en|dis)able where we deal with external dependencies.

        - Rework configure script so that --with[out] work as expected (enabling and
          disabling the feature, explicit error if "with" feature is explicitly
          specified but the feature it is unavailable, etc).

        - Rework SNMPService class for IDMEF draft 16 compliance.

        - Make sure we set alert CreateTime if the caller did not do it for us.

        - Fix handling of \r\n terminated line.

        - Ignore character that are part of the option value when comparing
          option specified using --option=value. Fix handling of parent option.
          (#150).


* 2006-03-24, libprelude-0.9.7.2:

        - Fix regression introduced in prelude-msgbuf.


* 2006-03-21, libprelude-0.9.7.1:

        - Fix Perl/Python bindings uint64 handling on 32 bits machine.

        - Handle EAGAIN error from the asynchronous callback.

        - Better prelude-message buffer allocation scheme, which might
          prevent some memory fragmentation problem.


* 2006-03-09, libprelude-0.9.7:

        - Fix an issue with system using both IP v4 and v6 interfaces which
          doesn't allow binding both 0.0.0.0 and :: .

        - Add autoconf detection for libgcrypt: this fix a build issue for
          distribution shipping with broken libgnutls-config script.

        - Generate Perl and Python bindings for the prelude-timer API.

        - Fix for upcoming plugin that doesn't provide an activation option.

        - Various bug fixes.


* 2006-03-03, libprelude-0.9.6.1:

        - Flex generated file build fix for FreeBSD / NetBSD.


* 2006-03-02, libprelude-0.9.6:

        - Implement workaround for buggy libtool that will fail
          looking up symbol with preopening enabled in case the
          libtool archive is missing. Lot of distribution package
          seem to suffer from this.

        - idmef-path API improvement, allow user to specify negative
          index to address the list in reverse. Developer are now
          supposed to use IDMEF_LIST_APPEND (in place of index -1) and
          IDMEF_LIST_PREPEND (in place of 0) on listed object operation.

        - idmef-path API improvement: support for (<<) and (>>) listed
          object index, meaning to prepend the object / to append it,
          as well as (*) meaning to retrieve all object from a list. This
          deprecate the usage of (-1) previously used for appending.

        - Fix deconnection problem in client reading mode.

        - Improve option parsing: option value can now be provided using
          --option=value. This format is now a requirement for option that
          use an optional argument. Provide arguments information in the
          option help.

        - Fix deadlock on asynchronous prelude-client destruction.

        - Definitely fix the problem where prelude-adduser will, on some system,
          listen to Ipv6 IP address as the default: we now bind every address
          returned by getaddrinfo().

        - Fix crash in case of successive call to prelude_init(), prelude_deinit(),
          then prelude_init() again.

        - Introduce --passwd and --passwd-file option for prelude-adduser
          register and registration-server mode, allowing to specify one shot
          password on the command line, from a file, or from stdin.

        - Verbose error handling for prelude-adduser.

        - Fix perl bindings, make them more robust by adding type checking, and fix
          memory leak.

        - Fix parsing of string based broken down time criterion.

        - Handle configuration file containing \r.

        - Fix prelude_read_multiline2() return value (fix Prelude-Manager
          idmef-criteria-filter plugin).

        - Fix a bug in per thread error handling code which resulted in NULL
          error to be returned in case an application thread exited.

        - Various bug fixes.


* 2006-02-06, libprelude-0.9.5:

        - More TLS cleanup.

        - Application can now report error without using specific prelude_client
          error reporting function.

        - More work and improved verbose error reporting.

        - Fix compilation problem with prelude_error_is_verbose() (#130).

        - Fix OpenBSD compilation problem.


* 2006-01-30, libprelude-0.9.4:

        - Some useful API addition.

        - Much improved, verbose error reporting.

        - Cleaned up TLS handling, various bugfix.

        - In case an error occur when verifying the peer certificate,
          notify the peer about the failure.


* 2005-01-09, libprelude-0.9.3:

        - Implement analyzer revocation in prelude-adduser. This will require an upcoming
          prelude-manager update so that revoked analyzer are denied to connect.

        - Make prelude-adduser use GnuTLS anonymous authentication in case SRP is not
          available. This is becoming a requirement since some distribution disable SRP
          support because of patent issue.
          We keep using SRP by default if both prelude-adduser instance has it.

        - Fix 0.9.2 regression, with a crash when providing prelude-adduser with option.

        - Fix potential OpenBSD compilation issue due to a missing dependencie in the
          GnuLib inet_ntop module.


* 2005-01-06, libprelude-0.9.2:

        - Fix FreeBSD and OpenBSD build.

        - Avoid modifying the argv array, move unhandled option at the end (#116).

        - Handle special '--' option code.

        - Fix license notice, stating clearly that linking from a program
          using a GPL compatible license is allowed. Required for Debian package
          inclusion.

        - Various bugfix.


* 2005-12-13, libprelude-0.9.1:

        - Take care of assigning a default CreateTime field if the caller
          did not already take care of it.

        - Workaround invalid library run path added through MakeMaker generated Makefile.

        - Fix Perl bindings Makefile generated with DESTDIR appended twice.

        - When compiling against recent GnuTLS version, don't link prelude-adduser to
          libgnutls-extra since, SRP symbols were moved to libgnutls.

        - If the user is running a modified GnuTLS version with the SRP API removed
          (namely, this happen on Fedora), warn the user that he should install GnuTLS
          from source, and that he might want to open a ticket on RedHat bug tracker
          about it.

        - Fix a problem where "MissingFunctionMacros" was reported instead of the function name
          on error.

        - Set keepalive option for the Prelude client socket.

        - Make option printing buffered.

        - Various bugfix.


* 2005-09-20, libprelude-0.9.0:

        - 0.9.0 final.

        - Make Perl/Python bindings more fault tolerant.


* 2005-09-15, libprelude-0.9.0-rc16:

        - Fix compilation issue on system where __FUNCTION__ is missing
          (Example: Solaris 9).

        - Perl bindings would fail to compile if perl was compiled using
          the platform (non gcc) compiler.

        - Fix a lot of bugs with Perl bindings.

        - Fix compilation failure on Solaris 9 (#99)

        - Fix warnings.


* 2005-09-08, libprelude-0.9.0-rc15:

        - Fix OpenBSD compilation issue.

        - Fix crash when using connection pool with no failover.

        - Fix libprelude-error source generation issue under some locale.

        - Make IDMEF AdditionalData helper available from the SWIG bindings.

        - Filter out prelude-config.h exported definition.


* 2005-08-25, libprelude-0.9.0-rc14:

        - Fix Python exception on NULL data.

        - Only use pthread when needed (Example: avoid Perl interpreter failure).


* 2005-08-17, libprelude-0.9.0-rc13:

        - Fix compilation problem on system where ferror/clearerror are
          declared as macro.


* 2005-08-17, libprelude-0.9.0-rc12:

        - Workaround for system without variadic macros.

        - 64 bit conversion specifier detection: fix integer truncation issue
          on system that did not support %llu.

        - Fix compilation issue on system without va_copy().

        - Change connection port number (5554) to IANA reserved Prelude port number (4690).

        - Record full analyzer process path, as per IDMEFv14 recommandation.

        - More IDMEF Criteria operator. Allow case insensitive match.



* 2005-08-01, libprelude-0.9.0-rc11:

        - Better TLS error reporting.

        - SWIG API usage correction for portability.

        - Fix crash on destroy in case no failover was created.

        - Fix memory issue with prelude_string_vprintf() on some platform
          with specific va_list handling.

        - prelude-adduser --gid did not lookup the group name GID correctly.



* 2005-07-14, libprelude-0.9.0-rc10:

        - Fix a typo that could lead to 100% application CPU usage
          on Linux that was introduced in rc9 when using the monotonic clock.

        - Avoid failing if we can not lookup the path of the calling
          program.

        - Better path resolution for the calling program.

        - Fix compilation failure on system without pthread_atfork
          introduced in rc9.



* 2005-07-07, libprelude-0.9.0-rc9:

        - Improve prelude-async and prelude-timer thread safety. Use
          a monotonic clock if available. Fix pthread problem due to
          broken behavior with fork handler on FreeBSD.

        - Ability for the user to set the LIBPRELUDE_LOGFILE environment
          variable, defining a place where all prelude log goes.

        - Add the prelude-adduser "chown" command, allowing to change
          an existing analyzer UID/GID.

        - Make prelude-adduser not reset the profile UID/GID when
          used on an existing profile (example: you are not required to
          specify --uid and --gid anymore for each call to registration-server).

        - Fix a timer assertion in case we reconnected fine,
          but we failed flushing the failover pool. Only flush the
          global failover when all connection are up.

        - Include missing Prelude.pm in the distributed tarball.

        - Introduce broken down time criteria.

        - GCC4 warning fixes, 64 bits warnings fix, distcheck fix on 64
          bits platform using lib64. More C89 friendlyness.

        - Fix printing of usecond.

        - Various bugfix.


* 2005-05-27, libprelude-0.9.0-rc8:

        - Avoid AI family mixup on prelude-adduser connection registration.

        - Fix some bug in the configuration parser.


* 2005-05-26, libprelude-0.9.0-rc7:

        - Correct IDMEF criteria value escaping. Criteria containing
          single or double quote should now behave as expected.

        - Make it possible to unset implicitly embedded IDMEF structure.

        - Fix GnuLib FTW module for architecture lacking it.

        - Fix some memory leak.

        - Various bugfix.


* 2005-05-18, libprelude-0.9.0-rc6:

        - Fix compilation problem on system lacking the FTS interface.

        - Fix compilation problem on some MacOSX system.

        - Move generation of the Prelude configuration template from sensor
          first launch to prelude-adduser. More intuitive to the user.

        - You can now use the LIBPRELUDE_DEBUG environment variable to specify
          a libprelude debug level.

        - Fix problem with prelude-adduser register/registration-server on
          machine where ipv6 is enabled but no interface actually use it. It
          happened that prelude-adduser would use an incorrect address family.

        - Make idmef_message_print report GMT offset.

        - Avoid unportable convertion specifier, this was causing issue mainly
          on Solaris system.

        - Fix handling of GMT time. Stop messing with environment variable.
          People who has been experiencing issue with GMT offset or time should
          try this release.

        - Fix parsing time on Solaris. This resulted in wrong database query
          from Prewikka.

        - Various bugfix



* 2005-05-01, libprelude-0.9.0-rc5:

        - Make permission parser more tolerant.

        - Make prelude-adduser dump an error when permission can not be parsed.

        - Allow address formated using [address]:port, this is especially usefull
          for people on IPv6 network.

        - Make prelude-adduser's registration server provide a --listen option so
          that the user can specify where to listen for registration.

        - Fix a potential deadlock for sensor using asynchronous heartbeat without
          asynchronous message.

        - Map value returned by idmef_value_get_object() so that they can be accessed
          directly by the perl/python binding.

        - Add missing file->file_type IDMEFv14 field.

        - Various bugfix.


* 2005-04-17, libprelude-0.9.0-rc4:

        - Fix an issue with the prelude-adduser 'add' command not creating all
          files needed for a Manager. Resulting in later client authentication
          failure.

        - Don't treat negative GMT offset as an error in Python bindings.

        - Better socklen_t datatype check. Fix compilation on NetBSD system.

        - Use fts in place of ftw for portability (Fix prelude-adduser on MacOSX).

        - Fix possible double free on recursive message read error (fragmented message).

        - Fix GMT offset issue on OpenBSD machine. Include compatibility code for machine
          that does not support setenv/unsetenv.

        - Fix compilation problem on system where libprelude-0.8 is installed due to the
          library inclusion path.

        - IDMEF text output beautification.


* 2005-04-09, libprelude-0.9.0-rc3:

        - Change to the plugin infrastructure to check the API version
          a given plugin was compiled with.

        - Make analyzer deletion work on all architecture.

        - Fix bindings Makefile so that they can be used with BSD make.

        - Stop using pcreposix for IDMEF criteria matching, always rely
          on POSIX regex. The way pcreposix define it's symbol make it impossible
          to use it from a library if the final program isn't linked against
          libpcreposix (example: python / perl program using libprelude bindings).

        - Better incorrect IDMEF criteria detection.

        - Fix some compilation warnings.

        - Fix OpenBSD/MacOSX/Irix compilation.

        - Fix compilation on system that lack pthread_atfork().

        - Correct IDMEF value operator check.

        - Better IDMEF criteria error return value.


* 2005-03-31, libprelude-0.9.0-rc2:

        - Fix Python/Perl bindings linking order. Was linking to old version of the library
          on system where old libprelude-0.8 was installed.

        - Fix an issue with the Perl bindings on make clean.


* 2005-03-29, libprelude-0.9.0-rc1:

        Note: due to several years of work and the habit of working with the new
        version, it is hard to remind all the enhancement made in this release.
        Please bear with us and try it for yourself :-)

        - The Prelude framework has been stabilized, and a lot of consistency work
          has been going on.  The C API should remain mostly stable at this point,
          and we now offer Python and Perl bindings for interacting with Prelude.

        - C++ applications should now be able to compile with the library. New and
          powerful API like idmef-path (defining a path within an IDMEF message tree,
          assigning / retrieving it) and IDMEF criteria filtering has been introduced.

        - IDMEF draft 14 compliance.
        - Support for IDMEF optionnal integer in events.
        - A lot of work happened with the the IDWG to fix known IDMEF issue.
        - Message routing across distributed Manager for remote sensors administration.

        - The failover subsystem, used when the communication with a Prelude-Manager goes down,
          now support transaction and quota.

        - Message unique identity generation now done on the sensor side, and fully optional
          per IDMEF specifications.

        - Support Ipv6 for client/manager connectivity.

        - Use GnuTLS instead of OpenSSL. Authentication is now always done through TLS, and
          the encryption later can be dropped if the connection is local.

        - Usage of a single tool for sensor registration using SRP (Secure Remote Passwor protocol).

        - Allow multiple analyzer instance through the use of profiles.

        - Clean error handling. Application can now check the return value using
          prelude_perror(), prelude_strerror(), and prelude_strsource().

        - It is now possible to remotely query and set sensors options.

        - Make the plugin API allow different instance of one plugin to be loaded.

        - Allow recursive configuration file inclusion.

        - You can now define filesystem quota for failover.

        - Changed the way AND of manager work:
          When using {{ manager_addr = x.x.x.x && y.y.y.y }}, the emission used to stop if emission to x.x.x.x failed.
          However, from a practical point of view, people who use AND of manager for redondancy want both manager to
          receive exactly the same messages, even if one of the Manager fail.

          Thus, in case emission x.x.x.x fail, we still want to emit the message to y.y.y.y,
          and save the failed message associating them to x.x.x.x manager, for later emission.

        - Heartbeat now carry a status and an interval.

        - Use GnuLib for enhenced portability.


* 2003-12-09, libprelude-0.8.10:

        - Yoann Vandoorselaere <yoann@prelude-ids.org>:
          use a newer libtool version (fix an OpenBSD) problem.

* 2003-12-05, libprelude-0.8.9:

        - Yoann Vandoorselaere <yoann@prelude-ids.org>:
          Use version-info to set library soname to something
          meaningful.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>:
          Implement prelude_io_pending() function that return
          wether there are byte waiting to be read or not. Take
          care of the OpenSSL internal buffer.

        - Nicolas Delon <delon.nicolas@wanadoo.fr>:
          Add a new prelude-io type dedicated to socket operation.
          Enable checking of connection state with theses. This fix
          a bug where a connection breakage would only be noticed
          on the second alert send.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>:
          Make sensor-adduser work if not called by root.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>:
          Allow sensor-adduser to be called without the --uid
          option, but print a big warning telling that sensor added without
          a provided UID will have to be run using the registration UID.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>:
          Set generated certificate to start being valid one day
          before of the current time. This can avoid problem in case
          one of the machine involved in the communication doesn't have it's
          time set right.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>:
          Allow a children option to access it's parent option through
          a new function in the prelude-getopt API.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>:
          Fix yet another plugin loading problem on OpenBSD.

* 2003-10-21, libprelude-0.8.8:

        - Yoann Vandoorselaere <yoann@prelude-ids.org>:
          Work around problem with desynchronized ident that
          people were getting in case of machine or manager crash.

        - Nicolas Delon <delon.nicolas@wanadoo.fr>:
          Fix a memory leak affecting prelude-lml.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>:
          Fix a bug that could result in linking to the wrong
          version of libprelude being linked when dual libprelude
          version were installed.

        - Stephane Loeuillet <stephane.loeuillet@tiscali.fr>:
          README update.

* 2003-09-30, libprelude-0.8.7:

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Fix a crash on system without getaddrinfo().

* 2003-09-21, libprelude-0.8.6:

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Re-establish post 0.8.5 behavior of defaulting to enable
          asynchronous timer.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Handle tool, overflow, and correlation alert.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Make the operation of gathering/executing a timer atomic.
          Merge part of the HEAD code and avoid locking in case
          asynchronous timer aren't used.

        - Krzysztof Zaraska <kzaraska@student.uci.agh.edu.pl>
          Add AC_PROG_CPP so the preprocessor is detected before the OpenSSL
          presence test, so the OpenSSL detection works correctly.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Use pthread_join() instead of pthread_cancel().
          The behavior of pthread_cancel too much depend on the architecture.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Add a --pthread-cflags option to libprelude-config in order to
          avoid non threaded program to compile with pthread related option
          which might slow down program execution due to extra locking used
          by libc.

        - Sylvain Gil <prelude-code@tootella.org>
          Fix libprelude compilation under MacOSX.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Forbid multiline comment. (Fix #0000078).

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Fix GCC strict-aliasing warning.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Provide the ability for a prelude-client to connect using both
          IPv4 and IPv6. Also, the prelude-client code has been reworked
          so that connection using UNIX and TCP socket share more code.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Implementation of the prelude_inet API providing IPv4/IPv6 lookup
          function, as well as their fallback if IPv6 support is not present.

* 2003-04-28, libprelude-0.8.5:

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Explicitly permit linking with OpenSSL so that Debian
          package might be distributed.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Fix AC_DATATYPE_GENERIC so that it can find valid socklen_t
          replacement.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Fix a possible SIGSEGV on client that doesn't use prelude-getopt.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Fix a priority problem when assigning a variable, that
          could lead to a SIGSEGV.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Fix compilation with OpenSSL 0.9.7.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          prelude-getopt doesn't need to modify the argv array
          anymore. The application might want to still use it.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Fix a bug where option would not be printed if option
          flags was set to zero.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Fix a possible NULL strcmp that would result in a SIGSEGV
          for option without longname.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          Fix a possible NULL pointer dereference in the Prelude
          configuration engine.

        - Yoann Vandoorselaere <yoann@prelude-ids.org>
          When starting as a deamon close stdin, stdout, and stderr.

        - Krzysztof Zaraska <kzaraska@student.uci.agh.edu.pl>
          Make arbitrary length certificate work correctly, and fix
          a possible sensor-adduser SIGSEGV.

* 2002-09-23, libprelude-0.8.4:

        - Correct the way we enable/disable OpenSSL support.
          (Yoann Vandoorselaere).

        - Workaround system that doesn't define socklen_t. This
          make libprelude compile on Solaris.
          (Yoann Vandoorselaere).

        - Fix a possible NULL free in case the manager client
          creation fail.
          (Yoann Vandoorselaere).

        - Fix potential signed/unsigned integer problems.
          (Guillaume Pelat).

* 2002-09-10, libprelude-0.8.3:
        - Make sensor-adduser do exact compareason on sensor name,
          so that two sensor with the same prefix can't be confused.
          (Yoann Vandoorselaere).

        - If we're running on a big endian system, don't send uninitialized
          64bits value.
          (Yoann Vandoorselaere).

        - Handle error correctly when processing option from the config
          file. Assorted cleanup.
          (Yoann Vandoorselaere)

        - Fix possible file descriptor leak when handling error.
          (Guillaume Pelat).

* 2002-08-29, libprelude-0.8.2:
        - Correct check for OpenSSL, and profiling, so that
          you won't end up disabling OpenSSL with
          --enable-ssl=yes.                               (Yoann Vandoorselaere).

        - Fix an infinite loop when asking for SSL setup
          confirmation.                                   (Sebastien Guilbaud).

        - Don't provide an empty string to option callback
          when there is no argument.                      (Yoann Vandoorselaere).

* 2002-08-26, libprelude-0.8.1:
        - Act as a LIFO when subscribing a plugin, so that
          a plugin loading another, both subscribing from
          plugin_init() won't end up with undefined result (Yoann Vandoorselaere).

        - Delete plugin entry on plugin loading error.
          Fix a possible SIGSEGV.                          (Yoann Vandoorselaere).

        - Fix possible NULL pointer dereference when
          searching for a plugin.                          (Yoann Vandoorselaere).

        - Remove some unused function                      (Guillaume Pelat).

        - Fix possible recursive loop when asking
          information to the user in sensor-adduser.       (Guillaume Pelat).

        - Free username on error when authenticating.      (Guillaume Pelat).

        - Always nul terminate socket filename (handle
          case where the filename is too long).            (Guillaume Pelat).
